(()=>{var o,e={353:(o,e,t)=>{var r=t(755);r((function(){r(".contact-form").on("submit",(function(o){o.preventDefault();var e=r("#email").val(),t=r("#name").val(),a=r("#contact-textarea").val();r(".contact-form")[0].reset(),r(".contact-form-overlay").css({display:"flex"}),r.ajax({url:"https://formsubmit.co/ajax/baf6f2f077f9f8497948a7d66fd2092e",method:"POST",dataType:"json",data:{email:e,name:t,textarea:a},success:function(){console.log("success"),r(".contact-form-spinner").css({display:"none"}),r(".contact-form-overlay").text("Your message has been sent"),setTimeout((function(){r(".contact-form-overlay").css({display:"none"}),r(".contact-form-spinner").css({display:"flex"})}),3e3)},error:function(o){console.log(o),r(".contact-form-spinner").css({display:"none"}),r(".contact-form-overlay").text("Your message was not successfull <br><br> Please contact me directly at <br><br> james.t.wotherspoon@gmail.com"),setTimeout((function(){r(".contact-form-overlay").css({display:"none"}),r(".contact-form-spinner").css({display:"flex"})}),1e4)}})}))}))()}},t={};function r(o){var a=t[o];if(void 0!==a)return a.exports;var n=t[o]={exports:{}};return e[o].call(n.exports,n,n.exports,r),n.exports}r.m=e,o=[],r.O=(e,t,a,n)=>{if(!t){var s=1/0;for(i=0;i<o.length;i++){for(var[t,a,n]=o[i],c=!0,l=0;l<t.length;l++)(!1&n||s>=n)&&Object.keys(r.O).every((o=>r.O[o](t[l])))?t.splice(l--,1):(c=!1,n<s&&(s=n));if(c){o.splice(i--,1);var f=a();void 0!==f&&(e=f)}}return e}n=n||0;for(var i=o.length;i>0&&o[i-1][2]>n;i--)o[i]=o[i-1];o[i]=[t,a,n]},r.o=(o,e)=>Object.prototype.hasOwnProperty.call(o,e),(()=>{var o={693:0};r.O.j=e=>0===o[e];var e=(e,t)=>{var a,n,[s,c,l]=t,f=0;if(s.some((e=>0!==o[e]))){for(a in c)r.o(c,a)&&(r.m[a]=c[a]);if(l)var i=l(r)}for(e&&e(t);f<s.length;f++)n=s[f],r.o(o,n)&&o[n]&&o[n][0](),o[s[f]]=0;return r.O(i)},t=self.webpackChunkportfolio_bootstrap=self.webpackChunkportfolio_bootstrap||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var a=r.O(void 0,[755],(()=>r(353)));a=r.O(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,